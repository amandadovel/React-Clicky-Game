{"version":3,"sources":["images/logo.svg","images/bart.png","images/chief-wiggam.gif","images/homer.jpg","images/krusty.jpg","images/maggie.jpg","images/milhouse.png","images/mr-burns.png","images/ned-flanders.jpg","images/marge.jpg","images/ralph.jpg","images/santas-lil-helper.jpg","images/sideshow-bob.png","components/Navbar/Navbar.js","components/Character/Character.js","components/Container/Container.js","components/Footer/Footer.js","components/Banner/Banner.js","images.js","components/ClickyGame.js","index.js"],"names":["module","exports","__webpack_require__","p","Navbar","props","react_default","a","createElement","className","src","logo","alt","navMsgColor","navMessage","score","highScore","Character","onClick","e","clickEvent","target","name","Container","shake","characters","map","i","components_Character_Character","key","Footer","Banner","images","bart","chiefWiggam","homerSimpson","krustyTheClown","maggie","milhouse","mrBurns","nedFlanders","marge","ralph","santasLilHelper","sideshowBob","ClickyGame","state","allCharacters","_this","shuffleArray","wasClicked","checkClicked","bind","Object","assertThisInitialized","newArr","slice","shuffleArr","length","push","splice","Math","floor","random","clickedElem","_this2","this","prevState","shuffled","includes","setState","setTimeout","Fragment","components_Navbar_Navbar","components_Banner_Banner","components_Container_Container","components_Footer_Footer","Component","ReactDOM","render","components_ClickyGame","document","getElementById"],"mappings":"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","file":"static/js/main.9ab2cbf1.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";","module.exports = __webpack_public_path__ + \"static/media/bart.7aa0f2f2.png\";","module.exports = __webpack_public_path__ + \"static/media/chief-wiggam.d5d76f07.gif\";","module.exports = __webpack_public_path__ + \"static/media/homer.82350cd6.jpg\";","module.exports = __webpack_public_path__ + \"static/media/krusty.84ff8b75.jpg\";","module.exports = __webpack_public_path__ + \"static/media/maggie.d825e641.jpg\";","module.exports = __webpack_public_path__ + \"static/media/milhouse.d6f5c679.png\";","module.exports = __webpack_public_path__ + \"static/media/mr-burns.a60c0247.png\";","module.exports = __webpack_public_path__ + \"static/media/ned-flanders.90decb36.jpg\";","module.exports = __webpack_public_path__ + \"static/media/marge.e9ec71ea.jpg\";","module.exports = __webpack_public_path__ + \"static/media/ralph.2f0e66c1.jpg\";","module.exports = __webpack_public_path__ + \"static/media/santas-lil-helper.ebbeb55f.jpg\";","module.exports = __webpack_public_path__ + \"static/media/sideshow-bob.f4fc2946.png\";","import React from 'react';\nimport './Navbar.css';\nimport logo from '../../images/logo.svg';\n\nconst Navbar = props => (\n\n    <div className=\"navbar fixed-top px-4\">\n        <div className=\"d-flex align-items-center\">\n            <img src={logo} className=\"logo\" alt=\"logo\" />\n            <div className=\"navbar-brand\">Clicky Game</div>\n        </div>\n        <div className={\"msg \" + props.navMsgColor}>{props.navMessage}</div>\n        <div className=\"score\">\n            Score: {props.score} <span className=\"pipe\">|</span> High Score: {props.highScore}\n        </div>\n\n    </div>\n\n);\n\nexport default Navbar;","import React from 'react';\nimport './Character.css';\n\n// On click callback function\n// The clicked elements value can be passed to props.clickEvent \n// Checks if image has already been clicked\n\nconst Character = props => (\n    <div className=\"card\" onClick={e => props.clickEvent(e.target.src)}>\n        <img className=\"card-img-top card-height img-fluid\" src={props.name} alt=\"\" />\n    </div>\n)\n\nexport default Character;","import React from 'react';\nimport './Container.css';\nimport Character from '../Character';\n\n// Main container for each character component\n// Loops through props.characters which contains array of character images\n// Attaches the clickEvent function to each character component\n\nconst Container = props => (\n    <div \n        className={\n            props.shake \n            ? 'container d-flex flex-wrap justify-content-center shake'\n            : 'container d-flex flex-wrap justify-content-center'\n        }\n        >\n            {props.characters.map((a, i) => <Character name={a} key={i} clickEvent={props.clickEvent} />)}\n        </div>\n);\n\nexport default Container;","import React from 'react';\nimport './Footer.css';\n\nconst Footer = () => \n    <div className=\"footer text-center mt-5 p-3\">Amanda Dovel</div>\n\nexport default Footer;","import React from 'react';\nimport './Banner.css';\n\nconst Banner = () => (\n    <div className=\"banner d-flex align-items-center\">\n        <p className=\"col-md-8 text-center mb-5\">Click on an image to earn points, but be careful not to click the same image twice!</p> \n        \n    </div>\n);\n\nexport default Banner;","import bart from './images/bart.png';\nimport chiefWiggam from './images/chief-wiggam.gif';\nimport homerSimpson from './images/homer.jpg';\nimport krustyTheClown from './images/krusty.jpg';\nimport maggie from './images/maggie.jpg';\nimport milhouse from './images/milhouse.png';\nimport mrBurns from './images/mr-burns.png';\nimport nedFlanders from './images/ned-flanders.jpg';\nimport marge from './images/marge.jpg';\nimport ralph from './images/ralph.jpg';\nimport santasLilHelper from './images/santas-lil-helper.jpg';\nimport sideshowBob from './images/sideshow-bob.png';\n\nconst images = [\n    bart, \n    chiefWiggam, \n    homerSimpson, \n    krustyTheClown, \n    maggie,  \n    milhouse,  \n    mrBurns,  \n    nedFlanders,  \n    marge,  \n    ralph,  \n    santasLilHelper,  \n    sideshowBob  \n]\n\nexport default images;\n\n","import React, { Component } from 'react';\nimport Navbar from './Navbar';\nimport Container from './Container';\nimport Footer from './Footer';\nimport Banner from './Banner';\nimport images from '../images';\n\nclass ClickyGame extends Component {\n    state = {\n        score: 0,\n        highScore: 0,\n\n        // Stores class value to assign to navMessage based on good or bad click\n        navMsgColor: '',\n\n        // Contains array of image urls\n        allCharacters: this.shuffleArray(),\n\n        // Tracks each clicked element\n        wasClicked: [],\n\n        // Shakes the container on incorrect guess if set to true\n        shake: false\n    };\n\n    // Binds current 'this' context to checkClicked\n    // Allows access to current state\n    clickEvent = this.checkClicked.bind(this);\n\n    // Shuffle the array of images when the DOM loads and when an image is clicked\n    shuffleArray() {\n        // Creates copy of current characters array\n        // Able to modify by value not by reference\n        const newArr = images.slice();\n\n        // Stores the shuffled Array\n        const shuffleArr = [];\n\n        // Each loop through an index gets spliced from newArr, reducing its length\n        // Gets random index based off the current length of newArr\n        // Splices the value from newArr, and pushes to shuffleArr\n        while (newArr.length > 0) {\n            shuffleArr.push(newArr.splice(Math.floor(Math.random() * newArr.length), 1)[0]);\n        }\n\n        return shuffleArr;\n    }\n\n    checkClicked(clickedElem) {\n        // Creates copy of wasClicked array to modify by value not by reference\n        // wasClicked stores all previous clicked images\n        const prevState = this.state.wasClicked.slice();\n\n        // Shuffle images\n        const shuffled = this.shuffleArray();\n\n        // Tracks score \n        let score = this.state.score;\n        let highScore = this.state.highScore;\n\n        // If clicked image is not in 'wasClicked' array, score is increased\n        if (!this.state.wasClicked.includes(clickedElem)) {\n            // If score = highScore, then there is new highScore Value\n            if (score === highScore) {\n                score++;\n                highScore++;\n\n                // Otherwise only increase score value\n            } else {\n                score++;\n            }\n\n            // If this runs, the same element has not been clicked twice and score is increased\n            this.setState({\n                score: score,\n                highScore: highScore,\n                navMsgColor: 'correct',\n                navMessage: 'Correct!',\n                allCharacters: shuffled,\n                wasClicked: prevState,\n                shake: false\n            });\n\n            // adds clicked item to 'wasClicked' \n            prevState.push(clickedElem);\n            \n            // Removes green correct indicator on a successful click after .5s\n            // Re-renders the class on each success\n            return setTimeout(() => this.setState({ navMsgColor: '' }), 500);\n        }\n\n        // Resets the current score if the same element was clicked twice\n        if (this.state.wasClicked.includes(clickedElem)) {\n            let score = 0;\n            this.setState({\n                score: score,\n                highScore: highScore,\n                navMsgColor: 'incorrect',\n                navMessage: 'Incorrect!',\n                allCharacters: shuffled,\n                wasClicked: [],\n                shake: true\n            });\n\n            // Removes green correct indicator on a successful click after .5s\n            // Re-renders the class on each success\n            return setTimeout(() => this.setState({ navMsgColor: '' }), 500);\n        }\n\n    }\n    // Renders score to navbar\n    // Passes randomized 'state.allCharacters' array to Container\n    // Creates a character component for each image\n    // Passes 'this.checkClicked' to container to pass to each character component for click event\n    render() {\n        // console.log(this.state);\n        const state = this.state;\n        return (\n            <>\n                <Navbar\n                    score={state.score}\n                    highScore={state.highScore}\n                    navMessage={state.navMessage}\n                    navMsgColor={state.navMsgColor}\n                />\n                <Banner />\n                <Container\n                    shake={state.shake}\n                    characters={state.allCharacters}\n                    clickEvent={this.clickEvent}\n                />\n                <Footer />\n            </>\n        );\n    }\n}\n\nexport default ClickyGame;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport ClickyGame from './components/ClickyGame';\nimport './index.css';\n\nReactDOM.render(<ClickyGame />, document.getElementById('root'));\n\n"],"sourceRoot":""}